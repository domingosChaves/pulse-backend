spring.application.name=pulse-backend

# H2 in-memory datasource
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# H2 console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# URL do backend para o BFF (padrao para execucao local)
bff.backend.url=http://localhost:8081

# Garantir que data.sql seja executado apos o JPA criar o schema
spring.jpa.defer-datasource-initialization=true

# Use porta alternativa para evitar conflito local
server.port=8081

# JWT (suporta env: AUTH_JWT_SECRET e AUTH_JWT_EXP_SECONDS)
security.jwt.secret=${AUTH_JWT_SECRET:ZmFrZS1sb25nLXNlY3JldC1jaGFuZ2UtbWUtMzJieXRlcw==}
security.jwt.access-ttl=${AUTH_JWT_EXP_SECONDS:900}
security.jwt.refresh-ttl=${AUTH_JWT_REFRESH_EXP_SECONDS:2592000}

# OAuth2 (permitir redirect do front em dev)
oauth.allowed-redirects=http://localhost:4200/auth/callback
# Credenciais dos provedores (suporta env)
oauth.clients.google.client-id=${GOOGLE_CLIENT_ID:}
oauth.clients.google.client-secret=${GOOGLE_CLIENT_SECRET:}
oauth.clients.github.client-id=${GITHUB_CLIENT_ID:}
oauth.clients.github.client-secret=${GITHUB_CLIENT_SECRET:}

# spring.security.oauth2.* pode ser configurado quando usar o fluxo oauth2Login do Spring
#spring.security.oauth2.client.registration.google.client-id=
#spring.security.oauth2.client.registration.google.client-secret=
#spring.security.oauth2.client.registration.google.scope=openid,profile,email
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com
#spring.security.oauth2.client.registration.github.client-id=
#spring.security.oauth2.client.registration.github.client-secret=
#spring.security.oauth2.client.registration.github.scope=user:email
#spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
#spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
#spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
#spring.security.oauth2.client.provider.github.user-name-attribute=id
